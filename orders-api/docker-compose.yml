version: '3.9'

services:
  db:
    image: postgres:15-alpine
    container_name: orders-db
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - orders-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    image: kcn333/orders-api-app:latest
    container_name: orders-api-app
    ports:
      - "${APP_PORT}:8080"
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      SPRING_APPLICATION_NAME: ${APP_NAME}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - orders-network

volumes:
  pgdata:

networks:
  orders-network:
    driver: bridge